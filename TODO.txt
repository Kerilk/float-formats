* refactoring: adapt tests and documentation
* next_after method, 
* add comparisons to Value <=>
* add arithmetic to Value using Rational (BigDecimal for decimal types?)
  (maybe some directly on sign-significand-exponent); AlgM can be used for rounding
* implement BurgerDybvig for Values; (use the iterative scale2 instead of scale)  
* reserach if the double rounding that's happening in from_fmt may be a real problem
  (the neutral is first formatted to decimal_digits_necessary, then to a FP datum)
* rename :normalized_significand to :scientific_significand ?
* find alternative naming for from_ methods

* classes.rb :
  - there's too many similar     to_integral_sign_significand_exponent/from_integral_sign_significand_exponent
    methods; some refactoring is in order
* A solution is needed for the documentation of the format constants of FltPnt in RDoc.
  Apart from researching how to control RDoc, it could be convenient to add a comments
  (and name) parameters to the floating point formats and use them for documentation.
* Find out how did the CDC handled its double type, was the same exponent range used as for the single type
  and the low order half had to be zero when the exponent would go out of range? (as in PowerPC double-double)
